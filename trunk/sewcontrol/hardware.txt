==============
Hardware notes
==============

Slightly modified AVR Butterfly board

   Clock:  8 MHz internal RC oscillator
   LFUSE:  0x62
   HFUSE:  0x18
   EFUSE:  0xFF

   Programming:     JTAG
   Communications:  RS-232

   Tachometer output:     PE4 (SCL/PCINT4)
   Photo-interrupter:     PE5 (SDA/PCINT5)
   Zero crossing detect:  PE6 (D0/PCINT6)
   Triac output:          PB0 (Dataflash SS)
   Foot pedal:            PF1 (Modified voltage input)

Notes on voltage input mods:

   The foot pedal is a variable resistor: open-circuit when
   not pressed, 200k when slightly pressed, down to only tens
   of ohms when fully pressed.

   The Butterfly's input circuit has a zener diode for protection,
   and a voltage divider with 1M to the input, and 300k to ground.
   Remove the voltage divider (short the 1M resistor, remove the
   300k resistor).

   Now attach the pedal between ground and the PF1 input, with a
   33k pull-up resistor:

     3.3v ----+
              |
              R 33k
              |
      PF1 <---+---->  Pedal

      GND --------->  Pedal

Dataflash and TRIAC output:

   I originally wanted to repurpose the LDR input as the triac output,
   but my board seems to have developed a short between that net and
   ground. So as a backup plan, I'm using PB0, formerly the dataflash
   chipselect.

   We won't need the dataflash, and it's a useful chip for other
   projects, so I desoldered mine and saved it.

Timers:

   Timer 1 is normally used for driving the piezo element on the
   Butterfly. I'd like to use it as a 16-bit counter for timing triac
   pulses. So, to use the piezo element, it's necessary either to
   momentarily stop using Timer 1 for motor control, or to generate
   the piezo pulses in software.
