======
cube64
======

Introduction
------------

This is a project to build an adaptor for using Gamecube controllers
with N64 consoles. The motivation behind this is that the N64 has some
really great games, but the controller hardware is rather bad- the
joysticks wear out quickly, and the layout is odd. The Gamecube
controllers, however, have a superset of the features and a much
better joystick.

A secondary goal of this project is to more thoroughly reverse engineer
the protocols involved and create reusable libraries for interfacing PIC
microcontrollers to N64 and Gamecube devices. The very basics of reverse
engineering the two protocols was done before I started this project,
but I quickly discovered that there's much more to the protocol. I believe
this project may be the first one to completely reverse engineer the
protocol used by standard N64 controllers, including peripherals like the
memory and rumble paks.

All code here is released under the GPL. This means that if you have basic
electronics skills and a way to program the microcontroller, you can build
your own cube64 adaptorr easily. The hardware is extremely simple, and all
the complexity of reverse engineering and writing code is done for you ;)

Status
------

The protocol used between the N64 and controller, and between the controller
and controller pak is well-understood now. An RS-232 to N64 bridge and several
Python programs demonstrate just about all of the protocol.

The necessary subset of the protocol has been implemented in the cube64
firmware to emulate an official N64 controller with rumble pak. If 5V power
for the motor can be supplied to the gamecube controller, its rumble motor
will be used to emulate the N64 rumble pak.

All buttons on the gamecube controller are mapped to the correspondingly named
buttons on the N64 controller. In addition, Y acts as a second B button, and
X acts as another C-down button. The camera stick emulates all C buttons.

It should be possible to emulate the N64 memory pak using the results of my
reverse engineering, but the PIC16F84 probably isn't fast enough to run the
CRC algorithm in time to return a status byte to the N64. If a faster
implementation of the CRC is discovered or a processor about twice as fast is
used, the memory pak could be emulated easily.

Contents
--------

  firmware:  Source code for the firmware, in PIC assembly. I develop this
             mostly using the open source "gputils" package, but I occasionally
             test it with MPLAB. The firmware for the adaptor itself is
             "cube64.asm", but there are a few additional test programs
             and libraries.

  hardware:  This includes schematics for the adaptor, in PDF and gschem format.

  notes:     Utilities and documentation produced while reverse engineering

--
Micah Dowty <micah@navi.cx>
