<?xml version="1.0" encoding="UTF-8"?>

<!-- This display file was shamelessly stolen and modified from the mpc
     gdesklet created by Jonas Haggqvist.
	 -->

<display id="win" anchor="ne"
         window-flags="sticky, below">

  <meta name="Moose"
        version="0.1"
        preview="images/mpc.svg"
        author="W. Evan Sheehan"
        category="media/status,media/control"
        description="MPD client"/>

<!-- ********************************************************************** -->

<control id="mpc" interface="IMPC:8tu88xb8p2ggd2xmg5itk6xjl"/>

<frame id="border">

  <group id="slider"
         on-click="if (sc_behavior == 'click'): slide(self, SC_IN, SC_OUT)"
         on-doubleclick="if (sc_behavior == 'double'): slide(self, SC_IN, SC_OUT)"
         on-enter="if (sc_behavior == 'enter'): slide(self, SC_IN, SC_OUT)"
         on-leave="if (sc_behavior == 'enter'): slide(self, SC_IN, SC_OUT)">

    <group id="panel" width="5cm" height="1.7cm">

      <!-- the background image -->
      <group id="bg" width="100%" height="100%" bg-uri="images/bg.png"/>


      <group id="icon_group" y="0.1cm" width="1cm">

        <image uri="images/mpc.svg" image-width="1cm" image-height="1cm"/>
        <label id="lbl_state" anchor="center" x="50%" y="1.3cm" value="Playing" font="Sans 0.20cm" color="black"/>

      </group>


      <group id="info_group" y="0.1cm" width="3.8cm" height="1.5cm">

        <label id="artist"   font="Sans Bold 0.3cm" color="black"                   value="Artist"/>
        <label id="title"    font="Sans Bold 0.3cm" color="black" y="0.5cm"         value="Songtitle"/>
        <label id="progress" font="Sans Bold 0.4cm" color="black" anchor="se" y="100%"   x="95%" value="--:--"/>

        <image uri="images/crystal_prev.png" anchor="sw" y="95%" x="0.0cm" image-width="0.4cm" image-height="0.4cm"
               on-click="mpc.prev = 1" id="prevbutton" />
        <image uri="images/crystal_pause.png" anchor="sw" y="95%" x="0.4cm" image-width="0.4cm" image-height="0.4cm"
               on-click="playpause()" id="playpause" />
        <image uri="images/crystal_stop.png"  anchor="sw" y="95%" x="0.8cm" image-width="0.4cm" image-height="0.4cm"
               on-click="mpc.stop = 1" id="stopbutton" />
        <image uri="images/crystal_next.png"   anchor="sw" y="95%" x="1.2cm" image-width="0.4cm" image-height="0.4cm"
               on-click="mpc.next = 1" id="nextbutton"/>

      </group>

  </group>

</frame>


  <!-- the preferences dialog -->
  <prefs callback="prefs_cb">

    <page label="SideCandy">

      <title label="Sliding"/>
      <enum label="Orientation:" bind="sc_side"
            help="The orientation of the display.">
        <item label="Left" value="left"/>
        <item label="Right" value="right"/>
      </enum>
      <integer label="Delay:" bind="sc_slide_timer"/>
      <enum label="Behavior:" bind="sc_behavior">
        <item label="Slide on mouse click" value="click"/>
        <item label="Slide on double click" value="double"/>
        <item label="Slide on entering" value="enter"/>
        <item label="Never slide" value="never"/>
      </enum>

      <title label="Borders"/>
      <enum label="Border style:" bind="sc_border">
        <item label="LTVCandy" value="lt"/>
        <item label="Round" value="round"/>
        <item label="Drop Shadow" value="tmkt"/>
      </enum>
      <boolean label="Left border" bind="sc_border_left"/>
      <boolean label="Right border" bind="sc_border_right"/>
      <boolean label="Top border" bind="sc_border_top"/>
      <boolean label="Bottom border" bind="sc_border_bottom"/>

      <title label="Background"/>
      <uri label="Background image:" bind="Dsp.bg.bg_uri"/>
      <boolean label="Show background" bind="Dsp.bg.visible"/>
    </page>


<!-- **********************************************************************
     * Put your preferences stuff here:
     ********************************************************************** -->

    <page label="Server">
          <string label="Host:" bind="host" help="Enter the address of the MPD host"/>
          <integer label="Port:" bind="port" help="Enter the port the MPD server is running on"/>
					<float label="Timeout (s):" bind="timeout" help="Refresh time in seconds" min="0.1" />
    </page>

<page label="Display">
        <enum label="Time display:" bind="timedisplay" help="How to display playing time">
                <item label="Time elapsed" value="elapsed"/>
                <item label="Time remaining" value="remaining"/>
                <item label="Percent played" value="percent"/>
        </enum>
        <enum label="Button theme:" bind="buttontheme" help="Theme to use for the control buttons">
                <item label="Crystal" value="crystal"/>
                <item label="Simple" value="simple"/>
        </enum>
        <boolean label="Slide on songchange" bind="slideonchange" help="Slide display out on song change" />
        <float label="Slide timeout:" bind="slidetime" help="Time to slide the display out for on song change" min="1.0" />
</page>

<!-- ********************************************************************** -->

  </prefs>


  <!-- this loads the SideCandy magic -->
  <script uri="candy.script"/>
  <script><![CDATA[
host = "localhost"
port = 6600
timeout = 1.0
timedisplay = 'elapsed'
buttontheme = 'crystal'
slideonchange = False
slidetime = 3.0
lastsong = ('', '')

def prefs_cb(key, val):
    if key == 'buttontheme':
        sc_prefs_cb(key, val)
        updatebuttons()
    sc_prefs_cb(key, val)

def cleanup(string):
    return string.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')

def slideout():
    try:
        if _SLIDE_MODE['slider'] == _SLIDE_IN:
            slide(Dsp.slider, SC_IN, SC_OUT)
            add_timer(slidetime*1000, slidein)
    except:
        pass

def slidein():
    slide(Dsp.slider, SC_IN, SC_OUT)

def updateplaypausebutton():
    if mpc.state != 'play' and Dsp.playpause.uri == "images/%s_pause.png" % (buttontheme):
        Dsp.playpause.uri = "images/%s_play.png" % (buttontheme)
    elif mpc.state == 'play' and Dsp.playpause.uri != "images/%s_pause.png" % (buttontheme):
        Dsp.playpause.uri = "images/%s_pause.png" % (buttontheme)

def updatebuttons():
    Dsp.prevbutton.uri = "images/%s_prev.png" % (buttontheme)
    updateplaypausebutton()
    Dsp.stopbutton.uri = "images/%s_stop.png" % (buttontheme)
    Dsp.nextbutton.uri = "images/%s_next.png" % (buttontheme)

def playpause():
    mpc.playpause = 1
    updateplaypausebutton()


def update():
    global lastsong, host, port

    if mpc.state == 'play' and lastsong != (mpc.title, mpc.artist) and lastsong != ('', '') and slideonchange == True:
        slideout()

    lastsong = (mpc.title, mpc.artist)

    Dsp.lbl_state.value = cleanup(mpc.state)
    updateplaypausebutton()

    if mpc.state == 'fail':
        mpc.connect = (host, port)

    if mpc.state == 'stop':
        Dsp.artist.value = 'Stopped'
        Dsp.title.value = ''
        Dsp.progress.value = ''

    else:
        if len(mpc.title) > 18: Dsp.title.value = cleanup(mpc.title[:17]) + ".."
        else: Dsp.title.value = cleanup(mpc.title)

        if len(mpc.artist) > 18: Dsp.artist.value = cleanup(mpc.artist[:17]) + ".."
        else: Dsp.artist.value = cleanup(mpc.artist)

        if timedisplay == 'remaining':
            seconds = mpc.length - mpc.progress
            Dsp.progress.value = "-%d:%02d" % (seconds / 60, seconds % 60)
        elif (timedisplay == 'percent'):
            percent = mpc.percent
            Dsp.progress.value = "%.1f%%" % (percent)
        else:
            seconds = mpc.progress
            Dsp.progress.value = "%d:%02d" % (seconds / 60, seconds % 60)

    add_timer(1000 * timeout, update)


sc_prefs_cb("slideonchange", slideonchange)
sc_prefs_cb("slidetime", slidetime)
sc_prefs_cb("host", host)
sc_prefs_cb("port", port)
sc_prefs_cb("timeout", timeout)
sc_prefs_cb("timedisplay", timedisplay)
sc_prefs_cb("buttontheme", buttontheme)

mpc.connect = (host, port)
add_timer(0, update)
updatebuttons()
]]></script>

</display>
