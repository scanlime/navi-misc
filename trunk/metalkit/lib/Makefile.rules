#
# Common GNU Make rules for compiling Metalkit apps.
#
# To build your own apps, you just need a makefile which
# defines a few variables and includes this one. For example:
#
#    METALKIT_LIB = path/to/metalkit/lib
#    TARGET = myapp.img
#    LIB_MODULES = boot vgatext
#    APP_MODULES = main
#    include $(METALKIT_LIB)/Makefile.rules
#

# Basic options necessary to produce our standalone binary
CFLAGS := -m32 -ffreestanding -nostdinc -I$(METALKIT_LIB)
LDFLAGS := -nostdlib -Wl,-N,-Ttext,7C00

# Size Optimizations.
CFLAGS += -Os -Wl,--gc-sections

SOURCES := \
  $(METALKIT_LIB)/boot.S \
  $(METALKIT_LIB)/basic_asm.S \
  $(addprefix $(METALKIT_LIB)/, $(addsuffix .c, $(LIB_MODULES))) \
  $(APP_SOURCES)

ELF_TARGET := $(subst .img,.elf,$(TARGET))
LST_TARGET := $(subst .img,.lst,$(TARGET))

target: $(TARGET)

%.lst: %.elf
	objdump -d $< > $@

%.img: %.elf
	objcopy -O binary $< $@

# To optimize size, we compile all input files in one step. This
# lets GCC use information available from all files during its
# optimization phase.

$(ELF_TARGET): $(SOURCES)
	$(CC) $(LDFLAGS) $(CFLAGS) -o $@ $(SOURCES)

clean:
	rm -f $(TARGET) $(ELF_TARGET) $(LST_TARGET)
