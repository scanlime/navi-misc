#!/usr/bin/env python

import sys, gtk
from GTKsheet import GTKsheet
from Character import Character

def InitWindow():
  ''' Initialize and show the window. '''
  # Set up the window.
  window = gtk.Window(gtk.WINDOW_TOPLEVEL)
  window.connect('delete_event', lambda w, d: gtk.main_quit())
  window.set_title('Character Sheet')
  window.set_default_size(300, 200)

  box = gtk.VBox()
  window.add(box)

  menubar, accelGroup = Menu()
  window.add_accel_group(accelGroup)
  box.pack_start(menubar, gtk.FALSE)

  if len(sys.argv) > 1:
    character = Character()
    character.readCharacter(sys.argv[1])
    sheet = GTKsheet(character)

    box.pack_start(sheet.root)
    sheet.root.show()
  
  box.show()
  window.show()

def Menu():
  ''' Return a menu with accelerators. '''
  items = (('/_File', None, None, 0, '<Branch>'),
	   ('/File/_New', '<control>N', NewSheet, 0, None),
	   ('/File/_Open', '<control>O', OpenSheet, 0, None),
	   ('/File/ ',None, None, 0, None),
	   ('/File/separator', None, None, 0, '<Separator>'),
	   ('/File/_Quit', '<control>Q', lambda w, d: gtk.main_quit(), 0, None),
	   ('/Help', None, None, 0, '<Branch>'),
	   ('/Help/About', None, None, 0, None))

  accelerator = gtk.AccelGroup()
  itemFactory = gtk.ItemFactory(gtk.MenuBar, '<main>', accelerator)
  itemFactory.create_items(items)
  menubar = itemFactory.get_widget('<main>')
  menubar.show()
  
  return (menubar, accelerator)

def NewSheet():
  ''' Create a new character. '''
  print 'Not implemented.'

def OpenSheet(data, widget):
  ''' Open a sheet. '''
  # Create the file selector.
  fileWindow = gtk.FileSelection('Character Sheet')
  fileWindow.set_filename('data/')

  # OK button.
  #fileWindow.ok_button.connect('clicked', readNewData, fileWindow)
  fileWindow.ok_button.connect('clicked', lambda w: fileWindow.destroy())

  # Cancel button.
  fileWindow.cancel_button.connect('clicked', lambda w: fileWindow.destroy())

  fileWindow.show()

InitWindow()
gtk.main()
