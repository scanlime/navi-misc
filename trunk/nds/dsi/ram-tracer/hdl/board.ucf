#
# S3BOARD peripherals
#

NET "ledseg_a<0>"  LOC = "E13"  ;
NET "ledseg_a<1>"  LOC = "F14"  ;
NET "ledseg_a<2>"  LOC = "G14"  ;
NET "ledseg_a<3>"  LOC = "d14"  ;

NET "ledseg_c<0>"  LOC = "E14"  ;
NET "ledseg_c<1>"  LOC = "G13"  ;
NET "ledseg_c<2>"  LOC = "N15"  ;
NET "ledseg_c<3>"  LOC = "P15"  ;
NET "ledseg_c<4>"  LOC = "R16"  ;
NET "ledseg_c<5>"  LOC = "F13"  ;
NET "ledseg_c<6>"  LOC = "N16"  ;
NET "ledseg_c<7>"  LOC = "P16"  ;

NET "led<0>"  LOC = "K12"  ;
NET "led<1>"  LOC = "P14"  ;
NET "led<2>"  LOC = "L12"  ;
NET "led<3>"  LOC = "N14"  ;
NET "led<4>"  LOC = "P13"  ;
NET "led<5>"  LOC = "N12"  ;
NET "led<6>"  LOC = "P12"  ;
NET "led<7>"  LOC = "P11"  ;

NET "reset"  LOC = "M13"  ;
#NET "button<0>"  LOC = "M13"  ;
#NET "button<1>"  LOC = "M14"  ;
#NET "button<2>"  LOC = "L13"  ;
#NET "button<3>"  LOC = "L14"  ;



# Normal onboard clock (50MHz)
#NET "mclk"  LOC = "T9" ;

# Flying lead for IFCLK from FX2 chip
NET "mclk"  LOC = "D9" ;

NET "mclk"  TNM_NET = mclk ;
TIMESPEC TS_mclk = PERIOD "mclk" 60 MHz HIGH 50%;

#NET "switch<0>"  LOC = "F12"  ;
#NET "switch<1>"  LOC = "G12"  ;
#NET "switch<2>"  LOC = "H14"  ;
#NET "switch<3>"  LOC = "H13"  ;
#NET "switch<4>"  LOC = "J14"  ;
#NET "switch<5>"  LOC = "J13"  ;
#NET "switch<6>"  LOC = "K14"  ;
#NET "switch<7>"  LOC = "K13"  ;

NET "sram_oe" LOC = "K4";
NET "sram_we" LOC = "G3";

#
# USB2 board on connector A1.
#
# The standard Digilent USB2 pinout is garbage, this
# one has been modified to bring out all of the pins
# necessary for using the FX2 in Slave FIFO mode.
#

NET "usb_d<0>" LOC = "M10";
NET "usb_d<1>" LOC = "F3";
NET "usb_d<2>" LOC = "G4";
NET "usb_d<3>" LOC = "E3";
NET "usb_d<4>" LOC = "F4";
NET "usb_d<5>" LOC = "G5";
NET "usb_d<6>" LOC = "E4";
NET "usb_d<7>" LOC = "H4";

#NET "usb_flaga" LOC = "H3";
NET "usb_flagb" LOC = "J3";
#NET "usb_flagc" LOC = "J4";
#NET "usb_rdy0" LOC = "K5";

#NET "usb_ifclk" LOC = "R5";
NET "usb_slwr" LOC = "N8";
NET "usb_slrd" LOC = "K5";
NET "usb_sloe" LOC = "T8";
NET "usb_pktend" LOC = "T5";
NET "usb_fifoadr<0>" LOC = "N7";
NET "usb_fifoadr<1>" LOC = "R6";


#
# DS RAM on A2 and B1
#
# XXX: These are really LVCMOS18 I/Os, but I don't have a good
#      way to put them in their own bank right now, so they're
#      stuck using 2.5v logic thresholds. Close enough?
#

NET "ram_a<0>" LOC = "M11";
NET "ram_a<1>" LOC = "B11";
NET "ram_a<2>" LOC = "G15";
NET "ram_a<3>" LOC = "E11";
NET "ram_a<4>" LOC = "H15";
NET "ram_a<5>" LOC = "C12";
NET "ram_a<6>" LOC = "E16";
NET "ram_a<7>" LOC = "B13";
NET "ram_a<8>" LOC = "D10";
NET "ram_a<9>" LOC = "A5";
NET "ram_a<10>" LOC = "B6";
NET "ram_a<11>" LOC = "C9";
NET "ram_a<12>" LOC = "B4";
NET "ram_a<13>" LOC = "D7";
NET "ram_a<14>" LOC = "F15";
NET "ram_a<15>" LOC = "K16";
NET "ram_a<16>" LOC = "E15";
NET "ram_a<17>" LOC = "B10";
NET "ram_a<18>" LOC = "B14";
NET "ram_a<19>" LOC = "D8";
NET "ram_a<20>" LOC = "B7";
NET "ram_a<21>" LOC = "H16";
NET "ram_a<22>" LOC = "G16";

NET "ram_d<0>" LOC = "A12";
NET "ram_d<1>" LOC = "J16";
NET "ram_d<2>" LOC = "D16";
NET "ram_d<3>" LOC = "C16";
NET "ram_d<4>" LOC = "B5";
NET "ram_d<5>" LOC = "C8";
NET "ram_d<6>" LOC = "A4";
NET "ram_d<7>" LOC = "A3";
NET "ram_d<8>" LOC = "A13";
NET "ram_d<9>" LOC = "B12";
NET "ram_d<10>" LOC = "D12";
NET "ram_d<11>" LOC = "A10";
NET "ram_d<12>" LOC = "B16";
NET "ram_d<13>" LOC = "A7";
NET "ram_d<14>" LOC = "C15";
NET "ram_d<15>" LOC = "D15";

NET "ram_clk" LOC = "C6";
NET "ram_oe" LOC = "L15";
NET "ram_we" LOC = "E7";
NET "ram_ce1" LOC = "K15";
NET "ram_ce2" LOC = "C7";
NET "ram_ub" LOC = "B8";
NET "ram_lb" LOC = "A8";
NET "ram_adv" LOC = "A9";

NET "ram_clk_debug" LOC = "D6";
NET "ram_buf_debug" LOC = "D5";