Stack dump from ARM7 hook at 0x2fe0370.
--------------------------------------

Notes
-----

SP. saved to SPI by arm7_hook():
This must be the interrupt stack- it has the ISR at the top.

00000: 0380FF10

LR, saved on stack by arm7_hook():

00010: 02C0007C

From hook trampoline, push {r0-r7, lr}:
LR 0x37FFDA8, from function 0x37FFD00.
Function 0x37FFD00 has one caller, at 0x37FFBEC.

                00000005 00001100 00000000  |...............
00020: 02FE0370 0380A050 00000000 00044005  p...P........@..
00030: 04100000 037FFDA8

Address 0x37fbf60 is the beginning of a function

                         00044005 00000001  .........@......
00040: 00000000 00000000 00000000 00000000  ................
00050: 00000000 00000000 00000000 037FBF60  ............`...

Address 0x3809A70 appears to be data.

00060: 0000007C 00000264 03809A70

Addresses 0x37FB6A8/7 are in the swiHalt() function.

                                  00000080  |...d...p.......
00070: 00000009 04000000 000000D4 00000000  ................
00080: 00000000 00000000 00000000 00000000  ................
00090: 00000000 00000000 00000000 00000000  ................
000A0: 00000000 00000000 00000000 00000000  ................
000B0: 8000003F 00000000 037FB6A7 037FB6A8  ?...............

Address 0x37FE314 is a function that never returns.
Maybe this is a fault handler pointer used by the ISR?

000C0: 00000000 13FBFB06 0000F0C4 00000000  ................
000D0: 00000000 00000000 00000000 037FE314  ................

000E0: 00000000 00000000 00000000 00000000  ................
000F0: 00000000 02FF89E0 00000019 037FBEA0  ................

Address (0x37FBEA0) of what appears to be the ISR:
ISR looks up a handler from a function pointer table,
and branches to it.

Top of stack (0x380FFFF)

