CanvasElement.cs:
  * Add drawing.  This depends on the internal layout system being designed.
	This needs to be able to work both on gdk pixmaps and
	System.Drawing.Graphics surfaces (for clean-looking AA diagrams)
	so we can use the same code both for drawing on the canvas and
	creating a drag icon.  We might be able to just use System.Drawing
	for everything, but I don't know how well that works for GdkBitmap
	opacity masks.

Element.cs:
  * Pads should store an unadorned string for name and description. Then
	somewhere between getting those strings from the Pad and the
	tooltip some Pango should be added for formatting.

NavigationImage.cs:
  * Right now, it creates the navigation window with a fixed width of 200px.
	This means if you make the canvas really tall and skinny, you end up
	with a navigation window that's too tall to fit on the screen. It
	should probably have a maximum of n pixels in either dimension,
	scaling things to fit.
  * After moving around, the scrollbars look really weird until you mouse
	over them (for some reason). Dunno why.

Pipeline.cs:
  * This needs lots of design work before implementation can go forward.
  * We'll need some way to keep track of annotations (maybe composite).

PipelineDrawing.cs:
  * Make sure we trigger redraws/scrollbar fixes when necessary
  * Add drawing code

PluginManager.cs:
  * Make the warning dialog a little more sensible to people who aren't us.

Plugins all need element-specific implementation
  * serialization
  * custom drawing
  * ...

General things:
  * Internal layout needs to be designed.
  * Global layout needs to be designed.  This will have hooks back into
	PipelineDrawing to manage layout extents, serialize itself,
	and generally be really slick.  In terms of code structure, it
	would be handy to have this as a completely separate library
	(Flibble#)
  * We'll need something to manage the editing process.  The command pattern
	seems like it would be handy for this case.
  * We need to figure out some way to serialize things for use in the
	clipboard.  This will probably require finagling the Guid stuff
	a bit (maybe just creating a new Guid on paste).


